!function(e){function r(t){if(n[t])return n[t].exports;var a=n[t]={i:t,l:!1,exports:{}};return e[t].call(a.exports,a,a.exports,r),a.l=!0,a.exports}var n={};r.m=e,r.c=n,r.i=function(e){return e},r.d=function(e,n,t){r.o(e,n)||Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:t})},r.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(n,"a",n),n},r.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},r.p="/",r(r.s=0)}([function(module,__webpack_exports__,__webpack_require__){"use strict";eval('Object.defineProperty(__webpack_exports__, "__esModule", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isParcelNear", function() { return isParcelNear; });\nvar sqrt = Math.sqrt, abs = Math.abs;\n// don\'t put let or const in front of onmessage\n// otherwise webworker won\'t work\n// onmessage is a special function\nonmessage = function (e) {\n    var _a = e.data, features = _a.features, longitude = _a.longitude, latitude = _a.latitude, radiusMax = _a.radiusMax, radiusMin = _a.radiusMin;\n    // radiusMax: get parcels inside this radius\n    // radiusMin: filter pracels inside this radius\n    if (features) {\n        var newFeatures = features.filter(function (g) { return isParcelNear(g, longitude, latitude, radiusMax, radiusMin); });\n        postMessage(newFeatures);\n    }\n};\nonerror = function (e) {\n    console.info("worker error!");\n    console.error(e);\n};\nvar isParcelNear = function (geoJsonFeature, longitude, latitude, radiusMax, radiusMin) {\n    var lngCenter = geoJsonFeature.properties.lngCenter;\n    var latCenter = geoJsonFeature.properties.latCenter;\n    var l2Norm = sqrt(Math.pow((abs(lngCenter) - abs(longitude)), 2) + Math.pow((abs(latitude) - abs(latCenter)), 2));\n    return ((radiusMin || 0) <= l2Norm) && (l2Norm <= radiusMax);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/awesome-typescript-loader/dist/entry.js?{"transpileOnly":true,"useTranspileModule":true,"sourceMap":true,"verbose":false}!./src/worker.ts\n// module id = 0\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/worker.ts?./~/awesome-typescript-loader/dist/entry.js?%7B%22transpileOnly%22:true,%22useTranspileModule%22:true,%22sourceMap%22:true,%22verbose%22:false%7D')}]);